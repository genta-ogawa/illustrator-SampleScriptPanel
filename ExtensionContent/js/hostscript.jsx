//getting script list from presets folder.function userScriptGet(){    var getPath=decodeURI(app.path)+"/Presets.localized/ja_JP/スクリプト/";//←CS,OSで違う then cc2018	var folderObj=new Folder(getPath);	var jsxList=folderObj.getFiles("*.jsx");	folderObj.close;    var jsxNameList=new Array();    for(var j=0;j<jsxList.length;j++){        jsxList[j]=decodeURI(jsxList[j]);        jsxNameList[j]=decodeURI(new File(jsxList[j]).name);    };    var returnstr = jsxList.join(",")+"#"+jsxNameList.join(",");    return returnstr;};//Create Menu Actionfunction userCreateAction(ScriptName,KeyIndex,shortcutkeystr){	//step1.Create Action Set Menu String.	var actionName = "Asahi_action_set";	var nIndex = new Number(KeyIndex);	var ScriptNameList = new Array();	    ScriptNameList = ScriptName.split(",");	var ScKeySet = shortcutkeystr;	var scKey = new Number();	//次はsckeyを選べるようにすること 0619	if(ScKeySet == "patternA"){		sckey = 17;					//Func + shift	}	else if (ScKeySet == "patternB"){		sckey = 33;					//Func + comma	}	else if (ScKeySet == "patternC"){		sckey = 49;					//Func + shift + comma	}		var menuEn = '_0x60c000015aa0';	var menuEA = ScriptNameList ;	var ActionStrBuilder = ['/version 3',	'/name [ ' + actionName.length,	actionName.s2hex(),	']',	'/isOpen 0',	'/actionCount ' + nIndex + ' \n'].join(' \n');	//Step2.Create Action Element Menu String.	var ActionStrBuilderElement = new String();	for( i = 0 ; i < KeyIndex ; i++){		var Menu2Enc = new String();		var Menu2EncL= new Number(0);		var sckey2s = new String();		var sckeyFn = (sckey + i);		    sckey2s = sckeyFn.toString();		//メニューパネル内のスクリプトから参照されるスクリプト名に日本語表記が含まれているかを検出する		//もし日本語表記のスクリプト名があればs2hexではなく、encodeURIComponentメソッドを利用。		//１文字ずつ処理をして、		//エスケープした文字列が6文字以上なら、encodeURIComponetを、		//エスケープした文字列が6文字未満なら、s2hexを		//かけて連結し、同時に正しい変換前のレングスを得る。		var inJastrings       = menuEA[i];		var inJastringslength = menuEA[i].length;		var inJastringstohexc = new String();		var inJastringstohexl = new Number(0);		for(s = 0; s<inJastringslength; s++){			var escapeStr = escape(inJastrings[s]);			if (escapeStr.length >= 6) {		        //Then 日本語の処理 Ja-jp.		        inJastringstohexc = inJastringstohexc + encodeURIComponent(inJastrings[s]).replace(/\%/g,'');		        inJastringstohexl += 3;			} else {				//Then 日本語以外の処理 Others.		        inJastringstohexc = inJastringstohexc + inJastrings[s].s2hex();		        inJastringstohexl += 1;		    }		}		Menu2Enc = inJastringstohexc;		Menu2EncL= inJastringstohexl;			ActionStrBuilderElement += [ ' /action-' + ( i + 1 ) + ' {',			'/name [ ' + Menu2EncL,			Menu2Enc,			']',			'/keyIndex ' + sckey2s ,			'/colorIndex 0',			'/isOpen 1',			'/eventCount 1',			'/event-1 {',				'/useRulersIn1stQuadrant 0',				'/internalName (adobe_commandManager)',				'/localizedName [ 33',				'e383a1e3838be383a5e383bce9a085e79baee381abe382a2e382afe382bbe382',				'b9',				']',				'/isOpen 0',				'/isOn 1',				'/hasDialog 0',				'/parameterCount 2',				'/parameter-1 {',					'/key 1769238125',					'/showInPalette 4294967295',					'/type (ustring)',					'/value [ ' + menuEn.length,					menuEn.s2hex(),				']}',				'/parameter-2 {',					'/key 1818455661',					'/showInPalette 4294967295',					'/type (ustring)',					'/value [ ' + Menu2EncL ,					Menu2Enc ,				']}',				'}}'].join(' \n');	}		var AllActionStr = new String();	    AllActionStr = ActionStrBuilder + ActionStrBuilderElement;	createAction(AllActionStr, actionName);}//Create Actionfunction createAction (str, set) {	var tmpFile = File(Folder.desktop + set + '.aia');  	tmpFile.open('w');  	tmpFile.write(str); 	tmpFile.close();	app.loadAction(tmpFile);     tmpFile.remove();}//Clear Menu Actionfunction userClearAction() {	var actionName = "Asahi_action_set";	var findflag = "true";	while(findflag == "true"){		try{			app.unloadAction(actionName, '') ;		}		catch(e){			findflag = "false";		}	}}//Prototype string to hex.String.prototype.s2hex = function(){	var hex = new String();	var i;	for (j=0; j<this.length; j++){		hex = this.replace(/./g, function (a) {return a.charCodeAt(0).toString(16)});	}	return hex;}//Prototype GBKstring to hex 中文字符 未使用です//String.prototype.GBKs2hex = function () {//	var hex = new String(null);//    var f = File(Folder.desktop + 'hex.txt'), hex;//    f.encoding = 'UTF8';//    f.open('w'), f.write(this), f.close();//    f.encoding = 'BINARY';//    f.open('r');//    hex = f.read().toSource().replace(/(?:\(new String\("|"\)\)|\\u00)/g, '');//    f.close(), f.remove();//    return hex;//}